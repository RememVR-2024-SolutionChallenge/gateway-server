name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - 'main'

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          # copy all secrets from github secrets, and create .env file
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}

      - name: Set up GCP Credential
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "gcp-service-account.json"
          json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Configure Docker
        run: |
          gcloud auth configure-docker
      - name: Build and push image to Google Container Registry
        env:
          REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          IMAGE_TAG: ${{ secrets.CONTAINER_TAG }}
        run: |
          docker build -f Dockerfile -t gcr.io/$PROJECT_ID/$REGISTRY_NAME:$IMAGE_TAG .
          docker push gcr.io/$PROJECT_ID/$REGISTRY_NAME:$IMAGE_TAG
      - name: Deploy To Google Cloud Run
        env:
          REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          IMAGE_TAG: ${{ secrets.CONTAINER_TAG }}
        run: |
          gcloud run deploy $REGISTRY_NAME \
          --region us-central1 \
          --image gcr.io/$PROJECT_ID/$REGISTRY_NAME:$IMAGE_TAG \
          --platform managed \
          --allow-unauthenticated \
          --project $PROJECT_ID
